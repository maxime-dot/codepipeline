version: '3'
services:
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - 8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt
      - ./traefik.yml:/etc/traefik/traefik.yml
    networks:
      network:
       ipv4_address: 192.168.0.8
   
    healthcheck:
      test: ["CMD", "traefik", "healthcheck"]
      interval: 30s
      timeout: 3s
      retries: 2
      start_period: 10s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`traefik.goavana.com`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.services.api.loadbalancer.server.port=8080"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
      - "traefik.http.routers.api.middlewares=basic_auth_traefik"
      - "traefik.http.middlewares.basic_auth_traefik.basicauth.users=goavana:$$apr1$$ZCsZN3X3$$c6uGEOF2ERTh4aQZGueWb/"

  todo-frontend:
     image: frontend:release.domaine.v4.0
     container_name: todo-frontend
     restart: always
     volumes:
       - ./conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro
     depends_on:
       - web-rtc-chat
       - do-app-presence-tallymanager
       - auth
       - do-app-notification
         #     - do_mail_service
     ports:
      - 80
     networks:
       # proxy:
       network:
         ipv4_address: 192.168.0.7
     labels:
       - "traefik.enable=true"
       - "traefik.http.routers.todo-frontend.rule=Host(`do.goavana.com`)"
       
       - "traefik.http.routers.todo-frontend.entrypoints=web"
       - "traefik.http.routers.todo-frontend.middlewares=redirect"
       - "traefik.http.routers.todo-frontend.service=todo-frontend"
       - "traefik.http.services.todo-frontend.loadbalancer.server.port=80"
       - "traefik.http.routers.frontend_secure.rule=Host(`do.goavana.com`)"
       - "traefik.http.routers.frontend_secure.entrypoints=websecure"
       - "traefik.http.routers.frontend_secure.tls.certresolver=myresolver" 
       - "traefik.http.middlewares.redirect.redirectscheme.scheme=https"
       - "traefik.http.middlewares.redirect.redirectscheme.permanent=true"

       - "traefik.http.routers.frontend_secure.middlewares=basic_auth_front"
       - "traefik.http.middlewares.basic_auth_front.basicauth.users=goavana:$$apr1$$/TTBpTME$$8iHaoF78iUr7k88cr3xC/."
         
  error:
    image: guillaumebriday/traefik-custom-error-pages
    networks:
      # proxy:
      network:
        ipv4_address: 192.168.0.9
    ports:
      - 80
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.error.rule=Host(`${ERROR_URL}`)"
      
  mongo:
    container_name: mongo
    image: mongo:4.4.13
    restart: always
    volumes:
      - ./data:/data/db
    ports:
      - 27017:27017
    networks:
      network:
        ipv4_address: 192.168.0.2

  web-rtc-chat:
    image: todo_back_web-rtc-chat 
    container_name: wrchat
    restart: always
    ports:
      - 6600
    links:
      - mongo
    networks:
      # proxy:
      network:
        ipv4_address: 192.168.0.3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web-rtc-chat.rule=Host(`${WEBRTC_URL}`)"
      - "traefik.http.services.web-rtc-chat.loadbalancer.server.port=6600"
      - "traefik.http.routers.web-rtc-chat.entrypoints=websecure"
      - "traefik.http.routers.web-rtc-chat.tls.certresolver=myresolver"

      - "traefik.http.routers.web-rtc-chat.middlewares=web-rtc-chat"
      - "traefik.http.middlewares.web-rtc-chat.headers.customresponseheaders.Access-Control-Allow-Credentials=true" 
      - "traefik.http.middlewares.web-rtc-chat.headers.customresponseheaders.Access-Control-Allow-Methods=POST, GET, PUT, OPTIONS, DELETE"
      - "traefik.http.middlewares.web-rtc-chat.headers.customresponseheaders.Access-Control-Allow-Origin=https://do.goavana.com"
      - "traefik.http.middlewares.web-rtc-chat.headers.customresponseheaders.Access-Control-Allow-Headers=x-requested-with, Content-Type,Authorization" 

  do-app-presence-tallymanager:
    image: todo_back_do-app-presence-tallymanager
    container_name: tallymanager
    restart: always
    ports:
      - 7500
    links:
      - mongo
    networks:
      # proxy:
      network:
        ipv4_address: 192.168.0.4
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.do-app-presence-tallymanager.rule=Host(`${DOPRESENCE_URL}`)"
      - "traefik.http.services.do-app-presence-tallymanager.loadbalancer.server.port=7500"
      - "traefik.http.routers.do-app-presence-tallymanager.entrypoints=websecure"
      - "traefik.http.routers.do-app-presence-tallymanager.tls.certresolver=myresolver"
      
      - "traefik.http.routers.do-app-presence-tallymanager.middlewares=do-app-presence-tallymanager"
      - "traefik.http.middlewares.do-app-presence-tallymanager.headers.customresponseheaders.Access-Control-Allow-Credentials=true" 
      - "traefik.http.middlewares.do-app-presence-tallymanager.headers.customresponseheaders.Access-Control-Allow-Methods=POST, GET, PUT, OPTIONS, DELETE"
      - "traefik.http.middlewares.do-app-presence-tallymanager.headers.customresponseheaders.Access-Control-Allow-Origin=https://do.goavana.com"
      - "traefik.http.middlewares.do-app-presence-tallymanager.headers.customresponseheaders.Access-Control-Allow-Headers=x-requested-with, Content-Type,Authorization" 

  do-app-notification:
    image: notification:http.ngrok.1
    container_name: doapp-notification
    restart: always
    ports:
      - 23000
    depends_on:
      - mongo
    networks:
      # proxy:
      network:
        ipv4_address: 192.168.0.5
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.do-app-notification.rule=Host(`${DOAPPNOTIFICATION_URL}`)"
      - "traefik.http.services.do-app-notification.loadbalancer.server.port=23000"
      - "traefik.http.routers.do-app-notification.entrypoints=websecure"
      - "traefik.http.routers.do-app-notification.tls.certresolver=myresolver"
      
      - "traefik.http.routers.do-app-notification.middlewares=do-app-notification"
      - "traefik.http.middlewares.do-app-notification.headers.customresponseheaders.Access-Control-Allow-Credentials=true" 
      - "traefik.http.middlewares.do-app-notification.headers.customresponseheaders.Access-Control-Allow-Methods=POST, GET, PUT, OPTIONS, DELETE"
      - "traefik.http.middlewares.do-app-notification.headers.customresponseheaders.Access-Control-Allow-Origin=https://do.goavana.com"
      - "traefik.http.middlewares.do-app-notification.headers.customresponseheaders.Access-Control-Allow-Headers=x-requested-with, Content-Type,Authorization" 

  tracking:
    image: tracking:v3
    container_name: tracking
    restart: always
    ports:
      - 6006
    networks:
      # proxy:
      network:
        ipv4_address: 192.168.0.10
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tracking.rule=Host(`${TRACKING_URL}`)"
      - "traefik.http.services.tracking.loadbalancer.server.port=6006"
      - "traefik.http.routers.tracking.entrypoints=websecure"
      - "traefik.http.routers.tracking.tls.certresolver=myresolver"
      
      - "traefik.http.routers.tracking.middlewares=tracking"
      - "traefik.http.middlewares.tracking.headers.customresponseheaders.Access-Control-Allow-Credentials=true" 
      - "traefik.http.middlewares.tracking.headers.customresponseheaders.Access-Control-Allow-Methods=POST, GET, PUT, OPTIONS, DELETE"
      - "traefik.http.middlewares.tracking.headers.customresponseheaders.Access-Control-Allow-Origin=https://do.goavana.com"
      - "traefik.http.middlewares.tracking.headers.customresponseheaders.Access-Control-Allow-Headers=x-requested-with, Content-Type,Authorization" 

      

  auth:
    image: do_auth:v2.2
    container_name: do_auth
    restart: always
    ports:
      - 7000
    depends_on:
      - mongo
    networks:
      # proxy:
      network:
        ipv4_address: 192.168.0.6
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=Host(`${AUTH_URL}`)"
      - "traefik.http.services.auth.loadbalancer.server.port=7000"
      - "traefik.http.routers.auth.service=auth" 
      
      
      - "traefik.http.routers.auth.entrypoints=websecure"
      - "traefik.http.routers.auth.tls.certresolver=authresolver"
     
      - "traefik.http.routers.auth.middlewares=auth"
      - "traefik.http.middlewares.auth.headers.customresponseheaders.Access-Control-Allow-Methods=POST, GET, PUT, OPTIONS, DELETE"
      - "traefik.http.middlewares.auth.headers.customresponseheaders.Access-Control-Allow-Origin=https://do.goavana.com"
      - "traefik.http.middlewares.auth.headers.customresponseheaders.Access-Control-Allow-Headers=x-requested-with, Content-Type,Authorization" 
  do_mail_service:
    container_name: domail
    image: domail:v6.1
    ports:
      - 8000
  #      #volumes:
  #      #- ./.env:/app:rw
    depends_on:
      - ia
    environment:
      - PG_USER=postgres
      - PG_PASSWORD=postgres
      - PG_DB=postgres
      - PG_PORT=5432
      - PG_HOST=db
    links:
      - db
    networks:
  #    # proxy:
      network:
        ipv4_address: 192.168.0.11
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.do_mail_service.rule=Host(`do.mail.back.goavana.com`)"
      - "traefik.http.services.do_mail_service.loadbalancer.server.port=8000"
      - "traefik.http.routers.do_mail_service.service=do_mail_service" 
      
      
      - "traefik.http.routers.do_mail_service.entrypoints=websecure"
      - "traefik.http.routers.do_mail_service.tls.certresolver=myresolver"
      - "traefik.http.routers.do_mail_service.middlewares=do_mail_service"
      - "traefik.http.middlewares.do_mail_service.headers.customresponseheaders.Access-Control-Allow-Methods=POST, GET, PUT, OPTIONS, DELETE"
      - "traefik.http.middlewares.do_mail_service.headers.customresponseheaders.Access-Control-Allow-Origin=https://do.goavana.com"
      - "traefik.http.middlewares.do_mail_service.headers.customresponseheaders.Access-Control-Allow-Headers=x-requested-with, Content-Type,Authorization" 
  db:
    container_name: postgres
    image: postgres:12
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      # proxy:
      network:
        ipv4_address: 192.168.0.12
  ia:
    container_name: ia_domail
    image: aiservice:v2.0 
    ports:
      - 5000
    networks:
      network:
        ipv4_address: 192.168.1.13
    
volumes:
  pgdata: {}

networks:
  network:
    ipam:
      driver: default
      config:
        - subnet: 192.168.0.0/16
          gateway: 192.168.0.1
