default:
  tags:
  - onpremise

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH != "production"
      when: never
    - when: always

stages:
  - test
  - build
  - deploy
  - cleanup

variables:
  IMAGE_NAME: $CI_REGISTRY_IMAGEE
  USERNAME: $USERNAME
  HOST: $HOST
  PASSWORD_SERVER: $PASSWORD_SERVER
  PROD_ENDPOINT: https://do.goavana.com

run_unit_tests:
  stage: test
  script:
    - echo "Running unit test"
  only:
    - production

build_image:
  stage: build
  script:
    - sshpass -p $PASSWORD_SERVER ssh -o StrictHostKeyChecking=no -l $USERNAME $HOST "
        cd /home/rahona/Microservice_Do_Ofisialy/CLOUD_SOURCES/do-ofisialy &&
        git pull origin production &&
        docker build -t \"dofront:latest\" . "
  only:
    - production

push_image:
  stage: build
  needs:
    - build_image
  before_script:
    - export DATE_VERSION=$(date +%Y.%m.%d.%H.%M.%S)
    - docker login -u $CI_REGISTRY_USERNAME -p $CI_REGISTRY_PASSWORDD 
  script:
    - docker tag dofront:latest $CI_REGISTRY_IMAGEE:$DATE_VERSION
    - docker push $CI_REGISTRY_IMAGEE:$DATE_VERSION
    - docker rmi $CI_REGISTRY_IMAGEE:$DATE_VERSION
    - docker logout
  only:
    - production

deploy_to_production:
  stage: deploy
  before_script:
    - export VERSION=$(cat version.txt)
  script:
    - sshpass -p $PASSWORD_SERVER ssh -o StrictHostKeyChecking=no -l $USERNAME $HOST "
        cd /home/rahona/Microservice_Do_Ofisialy/Traefik_Microservice &&
        docker-compose down || true &&
        docker-compose up -d "
  only:
    - production
  environment:
    name: production
    url: $PROD_ENDPOINT

cleanup:
  stage: cleanup
  script:
    - sshpass -p $PASSWORD_SERVER ssh -o StrictHostKeyChecking=no -l $USERNAME $HOST "
        cd /home/rahona/Microservice_Do_Ofisialy/Traefik_Microservice &&
        ./cleanup.sh "
